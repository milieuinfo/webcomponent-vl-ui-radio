import{VlElement,define}from"/node_modules/vl-ui-core/vl-core.js";export class VlRadio extends(VlElement(HTMLElement)){static get _observedAttributes(){return["label","name","value","checked"]}static get _observedChildClassAttributes(){return["block","single","disabled","error"]}constructor(){super('\n            <style>\n                @import \'../style.css\';\n            </style>\n            \n             <label class="vl-radio" for="radio">\n              <input class="vl-radio__toggle" type="radio" id="radio" name="radio" value="1"/>\n              <div class="vl-radio__label"></div>\n            </label>\n        ')}connectedCallback(){this._inputElement.onchange=this._toggle}get _classPrefix(){return"vl-radio--"}get _inputElement(){return this._element.querySelector("input")}get _radioLabelElement(){return this._element.querySelector(".vl-radio__label")}toggle(){this._inputElement.click()}_toggle(){let e;const t=this.getRootNode().host;if(t._checked&&Array.isArray(t._checked)){const l=JSON.parse(this.value);t._checked.indexOf(l)>-1?t._checked.splice(t._checked.indexOf(l),1):t._checked.push(l),e=t._checked,t.setAttribute("checked",JSON.stringify(e))}else e=this.checked;this.dispatchEvent(new CustomEvent("input",{detail:e,bubbles:!0,composed:!0})),Array.from(t.parentElement.querySelectorAll("vl-radio[name="+this.name+"]")).filter(e=>e!==t).filter(e=>e._inputElement.checked).forEach(e=>e._inputElement.checked=!1)}_labelChangedCallback(e,t){this._label=t,this._radioLabelElement.append(this._label)}_valueChangedCallback(e,t){this._inputElement.value=t}_nameChangedCallback(e,t){this._inputElement.name=t}_checkedChangedCallback(e,t){try{this._checked=JSON.parse(t)}catch(e){this._checked=null!=t}Array.isArray(this._checked)?this._checked.indexOf(JSON.parse(this._inputElement.value))>-1&&(this._inputElement.checked=!0):this._inputElement.checked=this._checked}_disabledChangedCallback(e,t){this._inputElement.disabled=null!=t}_singleChangedCallback(){[...this._radioLabelElement.childNodes].filter(this._isTextNode).forEach(this._removeNode);const e=document.createElement("span");e.classList.add("vl-u-visually-hidden"),e.textContent=this._label,this._radioLabelElement.appendChild(e)}_isTextNode(e){return 3===e.nodeType}_removeNode(e){e.remove()}}define("vl-radio",VlRadio);
